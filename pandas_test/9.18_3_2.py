#!/bin python
# -*- coding: utf-8 -*-
# @Time    : 2021/9/21
# @Author  : zhangl
import logging
import time
import traceback

import pandas
import requests
from lxml import etree

logger = logging.getLogger()
fh = logging.FileHandler('error.log', encoding='utf-8', mode='w')
formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
fh.setFormatter(formatter)
logger.addHandler(fh)
logger.setLevel(logging.ERROR)


def get_not_found():
    officialDataFrame = pandas.read_excel("户籍(老)-处理结果.xlsx", sheet_name="官方").fillna('')
    official = {}
    for index, row in officialDataFrame.iterrows():
        try:
            official[str(row['number'])] = (row['province'], row['city'], row['county'])
        except Exception as e:
            print(row)
            logging.error(e)
            break

    df = pandas.read_excel("9.18_3.xlsx", sheet_name="Sheet1")
    print(df)
    not_found_count = 0
    not_found_set = set()
    for index, row in df.iterrows():
        number = row['被保人证件号前六位'].replace("*", "")
        number_final = number

        # if number_final not in official:
        #     number_final = number[0:4] + '00'
        #
        # if number_final not in official:
        #     number_final = number[0:2] + '0000'

        if number_final not in official:
            print(number)
            not_found_set.add(number)
            not_found_count = not_found_count + 1

    print(not_found_set)
    print(df)
    print("未能匹配数量: " + str(not_found_count))
    return not_found_set


def get_office_dic():
    officialDataFrame = pandas.read_excel("户籍(老)-处理结果.xlsx", sheet_name="官方").fillna('')
    official = {}
    for index, row in officialDataFrame.iterrows():
        try:
            official[row['county']] = (str(row['number']), row['area'], row['province'], row['city'], row['county'])
        except Exception as e:
            print(row)
            logging.error(e)
            break
    return official


if __name__ == '__main__':
    # not_found_set = get_not_found()
    not_found_set = {'110110', '110115', '110222', '110223', '110225', '120114', '120115', '120119', '130122', '130222',
                     '130226', '130228', '130422', '130605', '130704', '130707', '130904', '132121', '132122', '132123',
                     '132124', '132126', '132127', '132128', '132129', '132130', '132132', '132133', '132135', '132201',
                     '132202', '132222', '132223', '132224', '132225', '132226', '132227', '132228', '132229', '132231',
                     '132232', '132233', '132235', '132237', '132301', '132302', '132321', '132322', '132323', '132324',
                     '132325', '132326', '132329', '132330', '132331', '132332', '132335', '132336', '132337', '132401',
                     '132402', '132404', '132421', '132423', '132424', '132425', '132426', '132427', '132428', '132429',
                     '132430', '132432', '132433', '132434', '132435', '132436', '132437', '132438', '132439', '132440',
                     '132442', '132521', '132522', '132523', '132524', '132525', '132526', '132527', '132528', '132529',
                     '132530', '132532', '132533', '132622', '132623', '132624', '132626', '132627', '132628', '132629',
                     '132801', '132821', '132822', '132823', '132825', '132826', '132827', '132828', '132829', '132902',
                     '132903', '132922', '132923', '132924', '132926', '132927', '132928', '132929', '132930', '132931',
                     '132932', '132934', '133001', '133022', '133023', '133024', '133025', '133026', '133027', '133028',
                     '133029', '133030', '133031', '140102', '140103', '140104', '140111', '140112', '140113', '140228',
                     '140422', '140511', '140523', '140702', '140721', '140722', '140723', '140724', '140726', '140729',
                     '140781', '140802', '140821', '140822', '140824', '140825', '140827', '140828', '140829', '140830',
                     '140881', '140882', '140902', '140922', '140923', '140929', '140930', '140931', '140932', '140981',
                     '141002', '141022', '141023', '141024', '141025', '141026', '141029', '141030', '141031', '141033',
                     '141034', '141081', '141082', '141102', '141121', '141122', '141123', '141124', '141125', '141127',
                     '141128', '141129', '141130', '141181', '141182', '142121', '142122', '142123', '142124', '142125',
                     '142126', '142127', '142128', '142129', '142130', '142131', '142132', '142133', '142224', '142249',
                     '142321', '142324', '142331', '142432', '142626', '142722', '142728', '149001', '150502', '150524',
                     '150526', '150702', '150722', '150821', '150822', '150823', '150824', '150825', '150826', '150902',
                     '150921', '150922', '150923', '150924', '150926', '150927', '150928', '150981', '152125', '152126',
                     '152321', '152621', '152622', '152623', '152628', '152633', '210121', '210219', '210221', '210222',
                     '210225', '210319', '210511', '210621', '210622', '210623', '210704', '210705', '210719', '210722',
                     '210723', '210724', '210725', '210821', '210824', '211022', '211111', '211203', '211222', '211225',
                     '211226', '211319', '211323', '211325', '219007', '220111', '220121', '220123', '220124', '220125',
                     '220222', '220223', '220224', '220225', '220319', '220324', '220519', '220522', '220603', '220604',
                     '220624', '222301', '222302', '222303', '222304', '222323', '222324', '222325', '222326', '222327',
                     '222328', '222423', '222425', '229001', '229002', '229004', '229005', '230119', '230122', '230222',
                     '230226', '230228', '230504', '230721', '230819', '230823', '230827', '230829', '230830', '230831',
                     '230832', '230834', '231011', '231021', '231022', '231023', '231026', '231027', '231202', '231221',
                     '231222', '231223', '231224', '231225', '231226', '231281', '231282', '231283', '232101', '232102',
                     '232103', '232122', '232125', '232126', '232127', '232128', '232130', '232131', '232321', '232328',
                     '232329', '232601', '232602', '232603', '232622', '232623', '232625', '232626', '232724', '239004',
                     '239005', '310111', '310119', '310221', '310222', '310223', '310224', '310227', '310228', '320116',
                     '320205', '320206', '320212', '320219', '320221', '320222', '320223', '320325', '320326', '320421',
                     '320422', '320423', '320506', '320507', '320520', '320521', '320522', '320523', '320524', '320525',
                     '320622', '320624', '320625', '320626', '320803', '320804', '320819', '320822', '320823', '320825',
                     '320827', '320828', '320881', '320911', '320919', '320926', '320927', '321019', '321020', '321021',
                     '321022', '321024', '321025', '321026', '321028', '321082', '321083', '321085', '321086', '321087',
                     '321119', '321123', '321124', '330107', '330109', '330121', '330123', '330124', '330125', '330126',
                     '330128', '330219', '330222', '330224', '330321', '330323', '330325', '330419', '330422', '330423',
                     '330425', '330502', '330511', '330622', '330623', '330625', '330703', '330719', '330722', '330724',
                     '330725', '330803', '330823', '331121', '331122', '331125', '331181', '332322', '332521', '332524',
                     '332601', '332602', '332603', '332621', '332622', '332623', '332624', '332625', '332626', '332627',
                     '339005', '339011', '340206', '340211', '340224', '340704', '340821', '340901', '341121', '341127',
                     '341422', '341521', '341602', '341621', '341622', '341623', '341702', '341721', '341881', '342101',
                     '342102', '342121', '342122', '342123', '342124', '342125', '342126', '342127', '342128', '342129',
                     '342130', '342201', '342221', '342222', '342223', '342224', '342225', '342228', '342301', '342321',
                     '342322', '342323', '342324', '342325', '342326', '342327', '342421', '342521', '342524', '342603',
                     '342700', '342701', '342721', '342723', '342724', '342725', '342726', '342728', '342821', '342822',
                     '342823', '342824', '342825', '342826', '342827', '342829', '342830', '350126', '350127', '350221',
                     '350304', '350305', '350420', '350505', '350522', '350523', '350621', '350902', '350921', '350922',
                     '350923', '350924', '350926', '350981', '350982', '352101', '352102', '352103', '352104', '352121',
                     '352122', '352123', '352124', '352127', '352128', '352129', '352221', '352224', '352226', '352524',
                     '352601', '352602', '352622', '352623', '352624', '352625', '352626', '352627', '359001', '359002',
                     '360211', '360212', '360221', '360311', '360312', '360422', '360621', '360802', '360822', '360823',
                     '360826', '360828', '360830', '360902', '360922', '360923', '360981', '360982', '360983', '361021',
                     '361023', '361121', '361124', '361127', '361129', '362001', '362101', '362102', '362103', '362121',
                     '362122', '362123', '362124', '362125', '362126', '362127', '362128', '362129', '362130', '362131',
                     '362132', '362133', '362134', '362135', '362136', '362137', '362221', '362222', '362223', '362333',
                     '362431', '362433', '362501', '370111', '370113', '370121', '370122', '370204', '370206', '370221',
                     '370222', '370223', '370224', '370225', '370226', '370421', '370620', '370622', '370623', '370624',
                     '370625', '370627', '370628', '370629', '370630', '370631', '370632', '370633', '370721', '370722',
                     '370723', '370726', '370727', '370728', '370729', '370822', '370823', '370825', '370903', '370919',
                     '370920', '370922', '371021', '371103', '371621', '371623', '371721', '371722', '371725', '371726',
                     '371727', '371728', '372331', '372401', '372402', '372421', '372422', '372423', '372424', '372425',
                     '372426', '372427', '372428', '372429', '372430', '372431', '372432', '372501', '372502', '372522',
                     '372523', '372524', '372525', '372526', '372527', '372801', '372802', '372822', '372823', '372824',
                     '372826', '372827', '372828', '372829', '372830', '372831', '372832', '372833', '372927', '379002',
                     '379004', '379005', '379008', '379009', '379012', '379013', '379014', '410084', '410107', '410111',
                     '410112', '410121', '410123', '410124', '410125', '410126', '410321', '410412', '410426', '410505',
                     '410521', '410722', '410723', '410824', '410826', '410827', '411022', '411103', '411104', '411219',
                     '411223', '411602', '411621', '411622', '411623', '411625', '411626', '411627', '411628', '411681',
                     '411702', '411721', '411722', '411723', '411724', '411725', '411726', '411727', '412301', '412321',
                     '412322', '412323', '412324', '412325', '412326', '412327', '412328', '412729', '412901', '412902',
                     '412921', '412922', '412923', '412924', '412925', '412926', '412927', '412928', '412929', '412930',
                     '412931', '412932', '413001', '413021', '413022', '413023', '413024', '413025', '413026', '413027',
                     '413028', '413029', '419004', '420121', '420122', '420123', '420124', '420221', '420400', '420506',
                     '420523', '420603', '420604', '420605', '420607', '420619', '420620', '420622', '420623', '420803',
                     '420804', '421004', '421281', '421302', '421381', '422101', '422103', '422121', '422123', '422124',
                     '422125', '422126', '422127', '422128', '422129', '422130', '422201', '422202', '422203', '422204',
                     '422221', '422223', '422224', '422225', '422226', '422228', '422301', '422302', '422322', '422323',
                     '422324', '422325', '422326', '422327', '422400', '422401', '422403', '422406', '422421', '422422',
                     '422423', '422424', '422425', '422426', '422427', '422428', '422429', '422431', '422432', '422601',
                     '422622', '422623', '422624', '422625', '422626', '422701', '422702', '422721', '422722', '422723',
                     '422724', '422725', '422726', '422727', '422728', '422729', '422921', '423020', '430123', '430219',
                     '430303', '430305', '430311', '430312', '430322', '430405', '430406', '430407', '430408', '430419',
                     '430425', '430526', '430622', '430625', '430911', '431302', '431321', '431322', '431381', '431382',
                     '432301', '432302', '432321', '432322', '432325', '432326', '432401', '432402', '432421', '432422',
                     '432423', '432424', '432425', '432426', '432427', '432428', '432526', '432621', '432622', '432623',
                     '432624', '432625', '432626', '432627', '432725', '432801', '432802', '432821', '432822', '432823',
                     '432824', '432826', '432827', '432828', '432829', '432831', '432901', '432902', '432922', '432923',
                     '432924', '432925', '432926', '432927', '432928', '432929', '432930', '433002', '433021', '433022',
                     '433023', '433024', '433025', '433026', '433027', '433029', '433030', '433031', '433102', '433129',
                     '439004', '440113', '440114', '440121', '440122', '440124', '440125', '440126', '440127', '440128',
                     '440205', '440223', '440225', '440226', '440227', '440228', '440230', '440231', '440266', '440302',
                     '440321', '440403', '440502', '440503', '440504', '440505', '440511', '440512', '440513', '440514',
                     '440515', '440520', '440521', '440522', '440524', '440525', '440526', '440527', '440528', '440536',
                     '440604', '440608', '440620', '440621', '440622', '440623', '440624', '440702', '440705', '440711',
                     '440721', '440722', '440723', '440724', '440725', '440726', '440727', '440821', '440822', '440824',
                     '440903', '440921', '440922', '440924', '441221', '441222', '441227', '441228', '441229', '441230',
                     '441281', '441282', '441303', '441318', '441321', '441425', '441522', '441611', '441703', '441722',
                     '441811', '441822', '441824', '442501', '442521', '442522', '442523', '442524', '442525', '442526',
                     '442527', '442528', '442529', '442530', '442531', '442801', '442821', '442822', '442823', '442824',
                     '442825', '442826', '442827', '442828', '442829', '442830', '445223', '450109', '450124', '450125',
                     '450126', '450127', '450223', '450224', '450226', '450402', '450511', '450525', '450804', '451024',
                     '451227', '451229', '451302', '451321', '451322', '451402', '451423', '451425', '452206', '452322',
                     '452323', '452324', '452325', '452327', '452328', '452329', '452330', '452331', '452332', '452421',
                     '452423', '452425', '452426', '452441', '452501', '452502', '452503', '452521', '452522', '452523',
                     '452524', '452525', '452526', '452527', '452528', '452722', '452802', '452821', '452822', '452824',
                     '452826', '452829', '460021', '460022', '460023', '460024', '460029', '460032', '460108', '460300',
                     '469002', '469007', '469021', '469023', '469024', '469025', '469026', '500116', '500117', '500119',
                     '502211', '510027', '510102', '510103', '510111', '510126', '510127', '510128', '510130', '510202',
                     '510203', '510211', '510212', '510213', '510214', '510215', '510216', '510217', '510218', '510219',
                     '510221', '510222', '510223', '510224', '510225', '510226', '510227', '510228', '510229', '510230',
                     '510231', '510232', '510281', '510282', '510283', '510523', '510602', '510622', '510624', '510625',
                     '510702', '510721', '510903', '510904', '511005', '511021', '511022', '511023', '511026', '511027',
                     '511081', '511121', '511122', '511127', '511128', '511130', '511131', '511202', '511203', '511204',
                     '511221', '511222', '511223', '511224', '511225', '511226', '511227', '511228', '511702', '511721',
                     '511722', '511723', '511724', '511725', '511825', '511902', '511921', '511922', '511923', '512002',
                     '512021', '512201', '512221', '512222', '512223', '512224', '512225', '512226', '512227', '512228',
                     '512229', '512301', '512322', '512323', '512324', '512325', '512326', '512328', '512329', '512501',
                     '512527', '512528', '512529', '512530', '512531', '512532', '512533', '512534', '512535', '512901',
                     '512902', '512903', '512921', '512922', '512923', '512924', '512925', '512926', '512927', '512928',
                     '512929', '512930', '513024', '513025', '513026', '513027', '513028', '513031', '513032', '513246',
                     '513521', '513522', '513523', '513524', '513525', '513601', '513621', '513622', '513623', '513624',
                     '519001', '519002', '519003', '519004', '520114', '520222', '520303', '520402', '520421', '520422',
                     '520424', '520425', '522101', '522121', '522122', '522123', '522124', '522125', '522126', '522127',
                     '522128', '522129', '522130', '522131', '522132', '522221', '522321', '522421', '522502', '522521',
                     '522522', '522523', '522524', '522525', '522724', '530123', '530200', '530622', '530623', '530624',
                     '530625', '530627', '530629', '530802', '530901', '530925', '532201', '532223', '532224', '532225',
                     '532226', '532227', '532228', '532231', '532233', '532401', '532422', '532423', '532424', '532425',
                     '532426', '532427', '532428', '532429', '532721', '532821', '533121', '533125', '610123', '610421',
                     '612101', '612102', '612103', '612124', '612125', '612126', '612127', '612128', '612129', '612130',
                     '612132', '612133', '612301', '612321', '612322', '612323', '612324', '612325', '612326', '612327',
                     '612328', '612329', '612330', '612421', '612521', '612601', '612621', '612622', '612624', '612625',
                     '612627', '612628', '612630', '612632', '620202', '620602', '620621', '620825', '621027', '621121',
                     '621122', '621123', '621125', '621126', '621223', '621225', '622122', '622403', '632824', '632825',
                     '632826', '640104', '640106', '640211', '640422', '640521', '642101', '642102', '642103', '642122',
                     '642123', '642124', '642125', '642126', '642127', '650109', '650300', '650502', '652322', '652326',
                     '652401', '652421', '652422', '652423', '652425', '652501', '652522', '652523', '652524', '652525',
                     '652601', '652623', '652721', '653021', '654022', '654023', '654025', '654027', '654028', '654222',
                     '659004', '810000'}
    not_found_set = sorted(not_found_set, reverse=False)
    # print(len(not_found_set))

    # not_found_set = {'110110', '110115', '110222'}

    office_dic = get_office_dic()
    # print(office_dic)

    errors = list()

    session = requests.Session()
    session.mount('http://', requests.adapters.HTTPAdapter(max_retries=3))
    session.mount('https://', requests.adapters.HTTPAdapter(max_retries=2))

    areas = []

    for number in not_found_set:
        # print(number)
        try:
            req = session.get("http://www.stl56.com/idcard/" + number + ".html", timeout=5)
            # req.encoding = 'utf8'
            # print(req.content.decode("utf-8"))

            root = etree.HTML(req.content)
            eles = root.xpath("//div[@class='mcon f14 noi']/p[3]")
            if len(eles) > 0:
                ele = eles[0]
                result = ele.text.split("(")[1].strip()
                county = ""
                for child in ele:
                    result = result + child.text.strip()
                    county = child.text.strip()

            if county is not None and county != "" and county in office_dic:
                line = " ".join([number, office_dic[county][1], office_dic[county][2], office_dic[county][3],
                                 office_dic[county][4]])
                print(line)
                with open("补充代码.txt", "a", encoding='utf-8') as codes:
                    codes.write(line + "\n")
            else:
                area = root.xpath("//div[@class='mcon f14 noi']/h2[1]/text()")[0]
                print(number, area)
                with open("areas.txt", "a", encoding='utf-8') as areas:
                    areas.write(" ".join([number, area]) + "\n")

            # if county is not None and county != "" and county in office_dic:
            #     # print(office_dic[county])
            #     line = " ".join([number, office_dic[county][1], office_dic[county][2], office_dic[county][3],
            #                      office_dic[county][4]])
            #     print(line)
            #     with open("补充代码.txt", "a", encoding='utf-8') as codes:
            #         codes.write(line +"\n")
            # else:
            #     errors.append((number, result))
            time.sleep(1)
        except Exception as e:
            logging.error((number, "not_found"))
            logging.error(e)
            errors.append((number, "not_found"))
            logging.error(traceback.format_exc())

    print(errors)
    print(len(errors))
    error_file = open("error_code.txt", 'a', encoding='utf-8')
    for error in errors:
        error_file.write(error + "\n")
    error_file.close()

    # officialDataFrame = pandas.read_excel("户籍(老)-处理结果.xlsx", sheet_name="官方")

    # with pandas.ExcelWriter("9.18_3-处理结果3.xlsx") as writer:
    #     df.to_excel(writer, sheet_name='结果', index=False)
